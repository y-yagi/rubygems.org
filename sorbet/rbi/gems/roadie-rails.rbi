# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/roadie-rails/all/roadie-rails.rbi
#
# roadie-rails-2.1.0
module Roadie::Rails::Utils
  def combine_callable(first, second); end
  def combine_hash(first, second); end
  def combine_nilable(first, second); end
  def combine_providers(first, second); end
  def self.combine_callable(first, second); end
  def self.combine_hash(first, second); end
  def self.combine_nilable(first, second); end
  def self.combine_providers(first, second); end
end
class Roadie::Rails::Options
  def [](option); end
  def []=(option, value); end
  def after_transformation; end
  def after_transformation=(arg0); end
  def apply_to(document); end
  def asset_providers; end
  def asset_providers=(providers); end
  def before_transformation; end
  def before_transformation=(arg0); end
  def combine!(options); end
  def combine(options); end
  def complain_about_unknown_keys(keys); end
  def external_asset_providers; end
  def external_asset_providers=(providers); end
  def initialize(options = nil); end
  def keep_uninlinable_css; end
  def keep_uninlinable_css=(arg0); end
  def merge!(options); end
  def merge(options); end
  def url_options; end
  def url_options=(arg0); end
end
class Roadie::Rails::DocumentBuilder
  def self.build(html, options); end
end
class Roadie::Rails::MailInliner
  def email; end
  def execute; end
  def improve_body; end
  def improve_html_part(html_part); end
  def initialize(email, options); end
  def options; end
  def transform_html(old_html); end
end
class Roadie::Rails::AssetPipelineProvider
  def asset_prefix; end
  def filename(asset); end
  def find_asset_in_pipeline(name); end
  def find_stylesheet(name); end
  def initialize(pipeline); end
  def normalize_asset_name(href); end
  def pipeline; end
  def remove_asset_digest(path); end
  def remove_asset_prefix(path); end
  include Roadie::AssetProvider
end
module Roadie::Rails::Mailer
  def roadie_mail(options = nil, final_roadie_options = nil, &block); end
  def roadie_options; end
end
module Roadie::Rails::Automatic
  def mail(*args, &block); end
  def roadie_options; end
end
module Roadie::Rails::InlineOnDelivery
  def deliver!; end
  def deliver; end
  def inline_styles; end
  def roadie_options; end
  def roadie_options=(arg0); end
end
