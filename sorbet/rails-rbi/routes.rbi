# This is an autogenerated file for routes helper methods

# typed: strong
class ActionController::Base
  extend T::Sig

  # Sigs for route /
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def root_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def root_url(*args, **kwargs); end

  # Sigs for route /api/v2/rubygems/:rubygem_name/versions/:number(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v2_rubygem_version_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v2_rubygem_version_url(*args, **kwargs); end

  # Sigs for route /api/v1/api_key/reset(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def reset_api_v1_api_key_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def reset_api_v1_api_key_url(*args, **kwargs); end

  # Sigs for route /api/v1/api_key(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_api_key_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_api_key_url(*args, **kwargs); end

  # Sigs for route /api/v1/multifactor_auth(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_multifactor_auth_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_multifactor_auth_url(*args, **kwargs); end

  # Sigs for route /api/v1/profiles/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_profile_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_profile_url(*args, **kwargs); end

  # Sigs for route /api/v1/downloads/top(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def top_api_v1_downloads_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def top_api_v1_downloads_url(*args, **kwargs); end

  # Sigs for route /api/v1/downloads/all(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def all_api_v1_downloads_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def all_api_v1_downloads_url(*args, **kwargs); end

  # Sigs for route /api/v1/downloads(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_downloads_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_downloads_url(*args, **kwargs); end

  # Sigs for route /api/v1/owners/:handle/gems.:format
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_owners_gems_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_owners_gems_url(*args, **kwargs); end

  # Sigs for route /api/v1/downloads/:id.:format
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_download_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_download_url(*args, **kwargs); end

  # Sigs for route /api/v1/versions/:id/reverse_dependencies.:format
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def reverse_dependencies_api_v1_version_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def reverse_dependencies_api_v1_version_url(*args, **kwargs); end

  # Sigs for route /api/v1/versions/:id/latest.:format
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def latest_api_v1_version_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def latest_api_v1_version_url(*args, **kwargs); end

  # Sigs for route /api/v1/versions/:version_id/downloads/search.:format
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def search_api_v1_version_downloads_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def search_api_v1_version_downloads_url(*args, **kwargs); end

  # Sigs for route /api/v1/versions/:version_id/downloads.:format
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_version_downloads_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_version_downloads_url(*args, **kwargs); end

  # Sigs for route /api/v1/versions/:id.:format
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_version_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_version_url(*args, **kwargs); end

  # Sigs for route /api/v1/dependencies(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_dependencies_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_dependencies_url(*args, **kwargs); end

  # Sigs for route /api/v1/gems/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_url(*args, **kwargs); end

  # Sigs for route /api/v1/gems/:id/reverse_dependencies(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def reverse_dependencies_api_v1_rubygem_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def reverse_dependencies_api_v1_rubygem_url(*args, **kwargs); end

  # Sigs for route /api/v1/gems/yank(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def yank_api_v1_rubygems_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def yank_api_v1_rubygems_url(*args, **kwargs); end

  # Sigs for route /api/v1/gems/:rubygem_id/owners(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_rubygem_owners_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_rubygem_owners_url(*args, **kwargs); end

  # Sigs for route /api/v1/gems(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_rubygems_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_rubygems_url(*args, **kwargs); end

  # Sigs for route /api/v1/gems/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_rubygem_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_rubygem_url(*args, **kwargs); end

  # Sigs for route /api/v1/activity/latest(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def latest_api_v1_activity_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def latest_api_v1_activity_url(*args, **kwargs); end

  # Sigs for route /api/v1/activity/just_updated(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def just_updated_api_v1_activity_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def just_updated_api_v1_activity_url(*args, **kwargs); end

  # Sigs for route /api/v1/search(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_search_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_search_url(*args, **kwargs); end

  # Sigs for route /api/v1/web_hooks/remove(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def remove_api_v1_web_hooks_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def remove_api_v1_web_hooks_url(*args, **kwargs); end

  # Sigs for route /api/v1/web_hooks/fire(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def fire_api_v1_web_hooks_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def fire_api_v1_web_hooks_url(*args, **kwargs); end

  # Sigs for route /api/v1/web_hooks(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_web_hooks_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_web_hooks_url(*args, **kwargs); end

  # Sigs for route /api/v1/timeframe_versions(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_timeframe_versions_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_timeframe_versions_url(*args, **kwargs); end

  # Sigs for route /versions(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def versions_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def versions_url(*args, **kwargs); end

  # Sigs for route /info/:gem_name(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def info_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def info_url(*args, **kwargs); end

  # Sigs for route /names(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def names_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def names_url(*args, **kwargs); end

  # Sigs for route /api_key(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_key_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_key_url(*args, **kwargs); end

  # Sigs for route /api_key/reset(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_key_reset_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_key_reset_url(*args, **kwargs); end

  # Sigs for route /api/v1/gems/unyank(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_gems_unyank_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_gems_unyank_url(*args, **kwargs); end

  # Sigs for route /gems(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def gems_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def gems_url(*args, **kwargs); end

  # Sigs for route /gems/:rubygem_id/migrate(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def migrate_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def migrate_url(*args, **kwargs); end

  # Sigs for route /search/advanced(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def advanced_search_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def advanced_search_url(*args, **kwargs); end

  # Sigs for route /search(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def search_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def search_url(*args, **kwargs); end

  # Sigs for route /dashboard(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def dashboard_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def dashboard_url(*args, **kwargs); end

  # Sigs for route /profiles/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def profile_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def profile_url(*args, **kwargs); end

  # Sigs for route /multifactor_auth/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_multifactor_auth_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_multifactor_auth_url(*args, **kwargs); end

  # Sigs for route /multifactor_auth(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def multifactor_auth_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def multifactor_auth_url(*args, **kwargs); end

  # Sigs for route /profile/delete(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def delete_profile_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def delete_profile_url(*args, **kwargs); end

  # Sigs for route /profile(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def destroy_profile_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def destroy_profile_url(*args, **kwargs); end

  # Sigs for route /profile/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_profile_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_profile_url(*args, **kwargs); end

  # Sigs for route /stats(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def stats_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def stats_url(*args, **kwargs); end

  # Sigs for route /news/popular(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def popular_news_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def popular_news_url(*args, **kwargs); end

  # Sigs for route /news(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def news_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def news_url(*args, **kwargs); end

  # Sigs for route /notifier(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def notifier_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def notifier_url(*args, **kwargs); end

  # Sigs for route /gems/:rubygem_id/subscription(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rubygem_subscription_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rubygem_subscription_url(*args, **kwargs); end

  # Sigs for route /gems/:rubygem_id/versions(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rubygem_versions_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rubygem_versions_url(*args, **kwargs); end

  # Sigs for route /gems/:rubygem_id/versions/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rubygem_version_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rubygem_version_url(*args, **kwargs); end

  # Sigs for route /gems/:rubygem_id/reverse_dependencies(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rubygem_reverse_dependencies_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rubygem_reverse_dependencies_url(*args, **kwargs); end

  # Sigs for route /gems(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rubygems_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rubygems_url(*args, **kwargs); end

  # Sigs for route /gems/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rubygem_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rubygem_url(*args, **kwargs); end

  # Sigs for route /email_confirmations/confirm/:token(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def update_email_confirmations_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def update_email_confirmations_url(*args, **kwargs); end

  # Sigs for route /email_confirmations/unconfirmed(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def unconfirmed_email_confirmations_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def unconfirmed_email_confirmations_url(*args, **kwargs); end

  # Sigs for route /email_confirmations/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_email_confirmations_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_email_confirmations_url(*args, **kwargs); end

  # Sigs for route /email_confirmations(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def email_confirmations_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def email_confirmations_url(*args, **kwargs); end

  # Sigs for route /passwords(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def passwords_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def passwords_url(*args, **kwargs); end

  # Sigs for route /passwords/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_password_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_password_url(*args, **kwargs); end

  # Sigs for route /session/mfa_create(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def mfa_create_session_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def mfa_create_session_url(*args, **kwargs); end

  # Sigs for route /session(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def session_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def session_url(*args, **kwargs); end

  # Sigs for route /users/:user_id/password/mfa_edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def mfa_edit_user_password_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def mfa_edit_user_password_url(*args, **kwargs); end

  # Sigs for route /users/:user_id/password/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_user_password_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_user_password_url(*args, **kwargs); end

  # Sigs for route /users/:user_id/password(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def user_password_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def user_password_url(*args, **kwargs); end

  # Sigs for route /users(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def users_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def users_url(*args, **kwargs); end

  # Sigs for route /users/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_user_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_user_url(*args, **kwargs); end

  # Sigs for route /sign_in(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sign_in_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sign_in_url(*args, **kwargs); end

  # Sigs for route /sign_out(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sign_out_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sign_out_url(*args, **kwargs); end

  # Sigs for route /sign_up(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sign_up_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sign_up_url(*args, **kwargs); end

  # Sigs for route /internal/ping(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def internal_ping_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def internal_ping_url(*args, **kwargs); end

  # Sigs for route /internal/revision(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def internal_revision_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def internal_revision_url(*args, **kwargs); end

  # Sigs for route /pages/*id
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def page_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def page_url(*args, **kwargs); end

end
